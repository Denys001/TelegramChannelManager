[{"D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\index.js":"1","D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\App.js":"2","D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\reportWebVitals.js":"3","D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\components\\Auth\\Login\\Login.js":"4","D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\components\\Auth\\Register\\Register.js":"5","D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\redux\\store.js":"6","D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\components\\Auth\\Login\\loginForm.js":"7","D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\components\\Auth\\Register\\registerForm.js":"8","D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\components\\Auth\\authLayout.js":"9","D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\components\\Auth\\MyInput.js":"10","D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\utils\\validators\\validators.js":"11","D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\api\\api.js":"12","D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\redux\\reducers\\authReducer.js":"13","D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\api\\request.js":"14","D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\components\\common\\Loader\\Loader.js":"15"},{"size":478,"mtime":1611408625988,"results":"16","hashOfConfig":"17"},{"size":601,"mtime":1611421760965,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":804,"mtime":1611509443014,"results":"20","hashOfConfig":"17"},{"size":839,"mtime":1611509180991,"results":"21","hashOfConfig":"17"},{"size":496,"mtime":1611498986609,"results":"22","hashOfConfig":"17"},{"size":2823,"mtime":1611501378308,"results":"23","hashOfConfig":"17"},{"size":3492,"mtime":1611501455282,"results":"24","hashOfConfig":"17"},{"size":1898,"mtime":1611490237390,"results":"25","hashOfConfig":"17"},{"size":790,"mtime":1611494921146,"results":"26","hashOfConfig":"17"},{"size":730,"mtime":1611489956583,"results":"27","hashOfConfig":"17"},{"size":274,"mtime":1611509344109,"results":"28","hashOfConfig":"17"},{"size":1651,"mtime":1611509407714,"results":"29","hashOfConfig":"17"},{"size":488,"mtime":1611499774232,"results":"30","hashOfConfig":"17"},{"size":364,"mtime":1611508335094,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"s4q6x",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\index.js",[],["67","68"],"D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\App.js",[],"D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\reportWebVitals.js",[],"D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\components\\Auth\\Login\\Login.js",[],"D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\components\\Auth\\Register\\Register.js",[],"D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\redux\\store.js",[],"D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\components\\Auth\\Login\\loginForm.js",["69","70","71","72","73"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Field } from 'redux-form'\r\nimport { reduxForm } from 'redux-form'\r\nimport Button from '@material-ui/core/Button'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport LinkS from '@material-ui/core/Link'\r\nimport Box from '@material-ui/core/Box'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport MyInput from '../MyInput'\r\nimport {email, required} from \"./../../../utils/validators/validators\"\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\nfunction LoginForm(props) {\r\n    const classes = useStyles()\r\n    const { handleSubmit, pristine, reset, submitting } = props\r\n    return (\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n            <Field\r\n                id=\"email\"\r\n                label=\"Електрона адреса\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                component={MyInput}\r\n                validate={[required, email]}\r\n            />\r\n            <Field\r\n                name=\"password\"\r\n                label=\"Пароль\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                component={MyInput}\r\n                validate={[required]}\r\n            />\r\n            {/* <FormControlLabel\r\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                            label=\"Remember me\"\r\n                            /> */}\r\n\r\n            <Grid container>\r\n                {/* <Grid item xs>\r\n                                <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n                                </Link>\r\n                            </Grid> */}\r\n                <Grid item>\r\n                    <Link to=\"/register\">\r\n                        <LinkS variant=\"body2\">\r\n                            {\"Ще не маєте акаунту? Зареєструватися\"}\r\n                        </LinkS>\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                disabled={submitting}\r\n            >\r\n                Увійти\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\nexport default LoginReduxForm","D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\components\\Auth\\Register\\registerForm.js",["74","75","76","77","78","79"],"import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport LinkS from '@material-ui/core/Link'\r\nimport { Link } from 'react-router-dom'\r\nimport Box from '@material-ui/core/Box'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Field } from 'redux-form'\r\nimport { reduxForm } from 'redux-form'\r\nimport MyInput from './../MyInput'\r\nimport {email, required, minLengthCreator} from \"./../../../utils/validators/validators\"\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\nconst min6 = minLengthCreator(6)\r\nfunction RegisterForm(props) {\r\n    const classes = useStyles()\r\n    const { handleSubmit, pristine, reset, submitting } = props\r\n    return (\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n            <Field\r\n                id=\"email\"\r\n                label=\"Електрона адреса\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                component={MyInput}\r\n                validate={[required, email]}\r\n            />\r\n            <Field\r\n                id=\"nickName\"\r\n                label=\"Нікнейм\"\r\n                name=\"nickName\"\r\n                autoComplete=\"nickName\"\r\n                component={MyInput}\r\n                validate={[required, min6]}\r\n            />\r\n            <Field\r\n                name=\"password\"\r\n                label=\"Пароль\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                component={MyInput}\r\n                validate={[required, min6]}\r\n            />\r\n            <Field\r\n                name=\"passwordConfirm\"\r\n                label=\"Підтвердження паролю\"\r\n                type=\"password\"\r\n                id=\"passwordConfirm\"\r\n                component={MyInput}\r\n                validate={[required]}\r\n            />\r\n            {/* <FormControlLabel\r\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                            label=\"Remember me\"\r\n                            /> */}\r\n\r\n            <Grid container>\r\n                {/* <Grid item xs>\r\n                                <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n                                </Link>\r\n                            </Grid> */}\r\n                <Grid item>\r\n                    <Link to=\"/login\">\r\n                        <LinkS variant=\"body2\">\r\n                            {\"Вже маєте акаунт? Увійти\"}\r\n                        </LinkS>\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                disabled={submitting}\r\n            >\r\n                Зареєструватися\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\nconst RegisterReduxForm = reduxForm({ form: 'register' })(RegisterForm)\r\nexport default RegisterReduxForm","D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\components\\Auth\\authLayout.js",[],"D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\components\\Auth\\MyInput.js",["80"],"import React, { Component } from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst MyInput = field => {\r\n    const hasError = field.meta.touched && field.meta.error;\r\n    if (!hasError)\r\n        return (\r\n            < TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                {...field}\r\n                {...field.input}\r\n            ></TextField >\r\n        )\r\n    else\r\n        return (\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                {...field}\r\n                {...field.input}\r\n                error\r\n                helperText={field.meta.error}\r\n            ></TextField>\r\n        )\r\n}\r\nexport default MyInput","D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\utils\\validators\\validators.js",[],"D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\api\\api.js",[],"D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\redux\\reducers\\authReducer.js",["81"],"import { authAPI } from './../../api/api'\r\nimport { stopSubmit } from 'redux-form'\r\nconst initialState = {\r\n    fetching: false,\r\n    isAuth: false,\r\n    token: null\r\n}\r\nconst SETFETCHING = \"setFetching\"\r\nconst SETAUTH = \"setAuth\"\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SETFETCHING:\r\n            return { ...state, ...action.payload }\r\n        case SETAUTH:\r\n            return { ...state, ...action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setFetching = (value) => ({ type: SETFETCHING, payload: { fetching: value } })\r\nexport const setAuth = (token) => ({ type: SETAUTH, payload: { isAuth: true, token } })\r\n\r\nexport const LoginRequest = (data) => {\r\n    return (dispatch) => {\r\n        dispatch(setFetching(true))\r\n        authAPI.login(data).then(res => {\r\n            if (res.ResualtCode === 1) {\r\n                dispatch(stopSubmit('login', { [res.field]: res.message }))\r\n            } else {\r\n                dispatch(setAuth(res.token))\r\n                console.log('auth is success');\r\n            }\r\n            dispatch(setFetching(false))\r\n\r\n        })\r\n\r\n    }\r\n}\r\nexport const RegisterRequest = (data) => {\r\n    return (dispatch) => {\r\n        dispatch(setFetching(true))\r\n        authAPI.register(data).then(res => {\r\n            if (res.ResualtCode === 1) {\r\n                dispatch(stopSubmit('register', { [res.field]: res.message }))\r\n            } else {\r\n                dispatch(setAuth(res.token))\r\n                console.log('auth is success');\r\n            }\r\n            dispatch(setFetching(false))\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\n","D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\api\\request.js",[],"D:\\MyFile\\College\\4 курс\\Курсова\\managerTelegramChannel\\client\\src\\components\\common\\Loader\\Loader.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":6,"column":8,"nodeType":"88","messageId":"89","endLine":6,"endColumn":24},{"ruleId":"86","severity":1,"message":"90","line":7,"column":8,"nodeType":"88","messageId":"89","endLine":7,"endColumn":16},{"ruleId":"86","severity":1,"message":"91","line":9,"column":8,"nodeType":"88","messageId":"89","endLine":9,"endColumn":11},{"ruleId":"86","severity":1,"message":"92","line":25,"column":27,"nodeType":"88","messageId":"89","endLine":25,"endColumn":35},{"ruleId":"86","severity":1,"message":"93","line":25,"column":37,"nodeType":"88","messageId":"89","endLine":25,"endColumn":42},{"ruleId":"86","severity":1,"message":"94","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":17},{"ruleId":"86","severity":1,"message":"87","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":24},{"ruleId":"86","severity":1,"message":"90","line":5,"column":8,"nodeType":"88","messageId":"89","endLine":5,"endColumn":16},{"ruleId":"86","severity":1,"message":"91","line":8,"column":8,"nodeType":"88","messageId":"89","endLine":8,"endColumn":11},{"ruleId":"86","severity":1,"message":"92","line":27,"column":27,"nodeType":"88","messageId":"89","endLine":27,"endColumn":35},{"ruleId":"86","severity":1,"message":"93","line":27,"column":37,"nodeType":"88","messageId":"89","endLine":27,"endColumn":42},{"ruleId":"86","severity":1,"message":"95","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"96","severity":1,"message":"97","line":10,"column":1,"nodeType":"98","endLine":19,"endColumn":2},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'FormControlLabel' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'Box' is defined but never used.","'pristine' is assigned a value but never used.","'reset' is assigned a value but never used.","'TextField' is defined but never used.","'Component' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]